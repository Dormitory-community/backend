name: Build and Deploy Docker (Optimized)

on:
  push:
    branches:
      - main
      - dev

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17 (zulu) and enable gradle cache
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Build Jar (on runner)
        run: |
          ./gradlew clean bootJar -x test --no-daemon -Dorg.gradle.jvmargs="-Xmx2g -XX:+UseParallelGC"

      - name: Prepare image context
        run: |
          cp build/libs/*.jar app.jar

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push runtime image (just copy JAR)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.runtime   # 아래 예시 참고
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ env.REPO_NAME }}:${{ github.sha }}

      # 6. Trigger Jenkins Deploy
      - name: Trigger Jenkins Deploy
        run: |
          DEPLOY_ENV=${{ github.ref_name == 'main' && 'prod' || 'dev' }}
          curl -X POST \
               -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36" \
               "https://${{ secrets.JENKINS_SERVER }}/job/production/buildWithParameters?token=${{ secrets.JENKINS_TOKEN }}&DEPLOY_ENV=${DEPLOY_ENV}" \
               --user ${{ secrets.JENKINS_USERNAME }}:${{ secrets.API_TOKEN }}