# =========================
# 빌드 스테이지
# =========================
FROM gradle:8.5-jdk17 AS build
WORKDIR /app

# Gradle 캐시 디렉토리 설정
ENV GRADLE_USER_HOME=/cache/.gradle

# 1. Gradle wrapper와 설정 파일만 먼저 복사
COPY gradlew gradlew.bat build.gradle settings.gradle ./
COPY gradle/ gradle/

# 2. 의존성만 먼저 설치 (캐시 레이어 최적화)
RUN --mount=type=cache,target=/cache/.gradle \
    gradle dependencies --no-daemon --parallel

# 3. 소스 전체 복사 후 실제 빌드
COPY src/ src/

# 4. 병렬 빌드 및 캐시 마운트로 최적화된 빌드
RUN --mount=type=cache,target=/cache/.gradle \
    gradle build \
    --no-daemon \
    --parallel \
    --build-cache \
    --gradle-user-home=/cache/.gradle \
    -x test \
    -Dorg.gradle.jvmargs="-Xmx2g -XX:+UseParallelGC"

# =========================
# 실행 스테이지
# =========================
FROM eclipse-temurin:17-jre-alpine AS runtime
WORKDIR /app

# 타임존 설정 (Alpine 버전)
RUN apk add --no-cache tzdata
ENV TZ=Asia/Seoul

# 애플리케이션 사용자 생성 (보안 강화)
RUN addgroup -g 1000 appgroup && \
    adduser -u 1000 -G appgroup -s /bin/sh -D appuser

# 빌드 결과 복사
COPY --from=build --chown=appuser:appgroup /app/build/libs/*.jar app.jar

# 사용자 전환
USER appuser

# 포트 및 실행 설정
EXPOSE 8080

# JVM 최적화 옵션 추가
ENTRYPOINT ["java", \
           "-XX:+UseContainerSupport", \
           "-XX:MaxRAMPercentage=75.0", \
           "-XX:+UseParallelGC", \
           "-XX:+TieredCompilation", \
           "-XX:TieredStopAtLevel=1", \
           "-jar", "app.jar"]